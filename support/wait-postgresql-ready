#!/usr/bin/env ruby
require 'open3'
require_relative '../lib/gdk/config'

def config
  @config ||= GDK::Config.new
end

def pg_host
  config.postgresql.dir
end

def pg_port
  config.postgresql.port
end

def main
  abort "#{$PROGRAM_NAME}: could not connect to Postgres at #{pg_host}" unless pg_ready?

  exec(*ARGV)
end

def pg_ready?
  last_error = nil

  10.times do
    stdin, stdout, stderr, thread = Open3.popen3(*%W[psql -h #{pg_host} -d template1 -p #{pg_port} -c SELECT\ now()])
    stdin.close
    stdout.readlines
    stdout.close
    last_error = stderr.readlines
    stderr.close
    exit_status = thread.value.to_i

    if exit_status.zero?
      return true
    end
    sleep 1
  end

  puts last_error
  false
end

abort "Usage: #{$PROGRAM_NAME} COMMAND [ARGUMENT...]" if ARGV.empty?

main
